{"version":3,"sources":["components/MyNavbar.js","components/TextForm.js","components/MyAlert.js","App.js","index.js"],"names":["MyNavbar","props","Navbar","bg","mode","expand","variant","Container","Brand","className","href","title","Toggle","aria-controls","Collapse","id","Nav","Link","home","link","NavDropdown","Item","Divider","Form","Check","type","label","onClick","toggleMode","style","color","TextForm","useState","text","setText","name","cols","rows","value","onChange","event","target","newtext","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","count","index","split","length","countWords","fontSize","defaultProps","MyAlert","message","Alert","App","setMode","alert","setAlert","setTimeout","document","body","backgroundColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6acb5ad1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav, Navbar, Container, NavDropdown, Form } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MyNavbar(props) {\r\n  return (\r\n    <div>\r\n      <Navbar bg={props.mode} expand=\"lg\" variant={props.mode}>\r\n        <Container>\r\n          <Navbar.Brand className=\"d-inline-block align-top\" href=\"#home\">\r\n            {props.title}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link>\r\n                {/* <Link\r\n                  to=\"home\"\r\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n                >\r\n                  {\" \"} */}\r\n                {props.home}\r\n                {/* </Link> */}\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                {/* <Link\r\n                  to=\"about\"\r\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n                >\r\n                  {\" \"} */}\r\n                {props.link}\r\n                {/* </Link> */}\r\n              </Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n              <Form>\r\n                <Form.Check\r\n                  type=\"switch\"\r\n                  id=\"darkmode-switch\"\r\n                  label=\"Dark Mode\"\r\n                  onClick={props.toggleMode}\r\n                  style={{ color: props.mode == \"light\" ? \"black\" : \"white\" }}\r\n                />\r\n              </Form>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nMyNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  home: PropTypes.string,\r\n  link: PropTypes.string,\r\n};\r\nMyNavbar.defaultProps = {\r\n  title: \"Title\",\r\n  home: \"Home\",\r\n  link: \"Link\",\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  let temp;\r\n  const handleUpperCaseButton = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Text is converted to Uppercase.\");\r\n  };\r\n  const handleLowerCaseButton = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Text is converted to Lowercase.\");\r\n  };\r\n  const handleclearButton = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text is cleared.\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopyToClipBoard = () => {\r\n    navigator.clipboard.writeText(text);\r\n    //alert(\"Content is copied.\");\r\n    props.showAlert(\"Content is copied to clipboard.\");\r\n  };\r\n  const countWords = () => {\r\n    let count = 0;\r\n    for (let index = 0; index < text.split(\" \").length; index++) {\r\n      const element = text.split(\" \")[index];\r\n      if (element != \"\") {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n  return (\r\n    <div style={{ color: props.mode == \"light\" ? \"black\" : \"white\" }}>\r\n      <div className=\"container\">\r\n        <div className=\"my-3\">\r\n          <h6>Enter text to Analyze.</h6>\r\n          <textarea\r\n            className=\"form-control\"\r\n            name=\"mybox\"\r\n            id=\"mybox\"\r\n            cols=\"100\"\r\n            rows=\"10\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n          <button className=\"btn btn-dark my-2\" onClick={handleUpperCaseButton}>\r\n            Convert To UpperCase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-dark my-2 mx-2\"\r\n            onClick={handleLowerCaseButton}\r\n          >\r\n            Convert To LowerCase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-dark my-2 mx-2\"\r\n            onClick={handleclearButton}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-dark my-2 mx-2\"\r\n            onClick={handleCopyToClipBoard}\r\n          >\r\n            Copy To Clip Board\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-2\">\r\n        <h2>Your Text Summary</h2>\r\n        <p>{countWords()}</p>\r\n        <p style={{ fontSize: \"18px\" }}>\r\n          {text.split(\" \").length * 0.008} Minutes to Read.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter text to preview here.\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nexport default function MyAlert(props) {\r\n  if (props.message) {\r\n    return (\r\n      <div>\r\n        <Alert variant=\"success\">{props.message}</Alert>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport { useState } from \"react\";\nimport TextForm from \"./components/TextForm\";\nimport MyAlert from \"./components/MyAlert\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode == \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#383838\";\n      showAlert(\"Switched to Dark Mode.\");\n      document.title = \"Word Counter Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"Word Counter Light Mode\";\n      showAlert(\"Switched to Light Mode.\");\n    }\n  };\n  const showAlert = (message) => {\n    setAlert(message);\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  return (\n    <div className=\"App\">\n      {/* <Router> */}\n      <MyNavbar\n        title=\"V.R.Developers\"\n        home=\"Home\"\n        link=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <MyAlert showAlert={showAlert} message={alert} />\n      {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}></Route>\n          <Route\n            exact\n            path=\"/home\"\n            element={ */}\n      <div className=\"container my-3\">\n        <TextForm mode={mode} showAlert={showAlert} />\n      </div>\n      {/* }\n          ></Route>\n        </Routes>\n      </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}